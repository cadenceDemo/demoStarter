plugins {
	id 'nu.studer.jooq' version '8.2'
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.crux.cadence.demo.starter'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
	flatDir {
		dirs 'libs'
	}
}

def lombokVersion = '1.18.26'
def cadenceVersion = '3.8.1'
def jacksonVersion = '2.15.0'
def mapstructVersion = '1.5.5.Final'
def postgreVersion = '42.5.1'
def lombokMapstructVersion = '0.2.0'
def junitVersion = '5.9.3'
def hamcrestVersion = '1.3'


dependencies {
	implementation files('libs/demoLib-1.0-SNAPSHOT.jar')

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

	implementation "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
	implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
	implementation "org.mapstruct:mapstruct:$mapstructVersion"
	annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:$lombokMapstructVersion"

	implementation "com.uber.cadence:cadence-client:$cadenceVersion"

	implementation "org.postgresql:postgresql:$postgreVersion"
	jooqGenerator 'org.postgresql:postgresql:42.5.1'

	compileOnly "org.projectlombok:lombok:$lombokVersion"
	annotationProcessor "org.projectlombok:lombok:$lombokVersion"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
	testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
	testCompileOnly "org.projectlombok:lombok:$lombokVersion"
	testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
}


jooq {
	configurations {
		main {
			generationTool {
				logging = org.jooq.meta.jaxb.Logging.WARN
				jdbc {
					driver = 'org.postgresql.Driver'
					url = 'jdbc:postgresql://localhost:5432/cruxdemo'
					user = 'uncleblueberry'
					password = 'superPa55*'
				}
				generator {
					name = 'org.jooq.codegen.DefaultGenerator'
					database {
						name = 'org.jooq.meta.postgres.PostgresDatabase'
						includes = '.*'
						excludes = ''
					}
					target {
						packageName = 'com.crux.cadence.demo.dsl'
						directory = 'src/main/java/jooq/'
					}
				}
			}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
